I finished the APT challange on tryhackme.com/room/bpsplunk.  My first BOTS,  here is my walk-through.


scenario 1 -
=======================================================================
FIND THE IP:

	index=botsv1 imreallynotbatman.com  
click sourcetypes field  to get to find the sourcetypes
click src field to get ips

add sourcetype=stream:http to search to see what the data that is being seen over the wire
	index=botsv1 imreallynotbatman.com sourcetype=stream:http
94.432% seems interesting

VALIDATE THE IP SCANNING YOU:

Change sourcetype to suricata and IP investigating, from here we can view signitures 	
	index=botsv1 imreallynotbatman.com src=40.80.148.42 sourcetype=suricata
there are a lot of possible attack coming from that src IP

1. 40.80.148.42
=======================================================================
ID THE SCANNER:
go back to the http stream and look at the source header from that IP
	index=botsv1 src=40.80.148.42 sourcetype=stream:http
we find the scanner in the header

2. Acunetix 
=======================================================================

WHAT IS THE TARGET SERVER and CMS on it?
	index=botsv1 src=40.80.148.42 sourcetype=stream:http
99.995% of the traffic is going to 192.168.250.70

3. 192.168.250.70
=======================================================================
add the dest ip in search and look at the URI to find the files, most are in joomla directory
	index=botsv1 src=40.80.148.42 dest=192.168.250.70 sourcetype=stream:http

4. joomla
=======================================================================

WHAT ADDRESS IS DOING A BRUTE_FORCE?
look at the http stream and check source IPs going  to out server's IP 
	index=botsv1 sourcetype=stream:http dest="192.168.250.70"
2 ips external IPs show: 40.80.148.42 and 23.22.63.114
added each one to the search string and looked at the form data(1st was src="40.80.148.42")
Nothing interesting to detect a brute force
src="23.22.63.114" form data had many attempts with different passwords for admin

5. 23.22.63.114
=======================================================================

What was the first password attempted in the attack?

In one attack, I saw it was Post

reverse the order and add POST method
	index=botsv1 sourcetype=stream:http dest="192.168.250.70" src="23.22.63.114" 
| reverse

6. 12345678
=======================================================================
One of the passwords in the brute force attack is James Brodsky's favorite Coldplay song. 
Which six character song is it?

adding regex to the search to pull the password from the formdata field,
created a field for the length of the password attempted,
searched for a password length of 6 in that field and put them into a table
	index=botsv1 sourcetype=stream:http dest="192.168.250.70" src="23.22.63.114" http_method=POST 
| rex field=form_data "passwd=(?<userpassword>\w+)" | eval passlen=len(userpassword) | search passlen=6
| table userpassword passlen

looked up coldplay(not my music really) songs and first one with 6 letters was yellow

add search for yellow to the list tabel created
	index=botsv1 sourcetype=stream:http dest="192.168.250.70" src="23.22.63.114" http_method=POST 
| rex field=form_data "passwd=(?<userpassword>\w+)" | eval passlen=len(userpassword) | search passlen=6
| table userpassword passle| where match(userpassword,"yellow")

7.  yellow
=======================================================================
What was the correct password for admin access to the content management system running imreallynotbatman.com?

we know of at least 1 other external IP had communication with that server (40.80.148.42)
So I used Regex again to pull the password used and check if there was 1 used by both IPs

	index=botsv1 sourcetype=stream:http form_data=*username*passwd* 
dest_ip=192.168.250.70 | rex field=form_data "passwd=(?<userpassword>\w+)" 
| stats count by userpassword | sort - count

"batman" was the only one with 2, looking at the events, 1 event from each of those 2 IPs.

8. batman
=======================================================================

What was the average password length used in the password brute forcing attempt rounded to closest whole integer?
use regex to pull the passwords again and create a table

get the password lengths and average them, than round them

	index=botsv1 sourcetype=stream:http dest="192.168.250.70" src="23.22.63.114" http_method=POST 
| rex field=form_data "passwd=(?<userpassword>\w+)" | table userpassword 
| eval mylen=len(userpassword) 
| stats avg(mylen) AS aver
| eval averROUND=round(aver,0)


9. 6
=======================================================================
How many seconds elapsed between the time the brute force password scan identified the correct password and the compromised login rounded to 2 decimal places?

We know the password was batman, so we look when batman was used by creating a search and putting results in a table with the time and the source

	index=botsv1 sourcetype=stream:http  | rex field=form_data "passwd=(?<userpassword>\w+)" | search userpassword=batman | table _time src

pull out a calculater, subtract and round 
1 min 32.169 sec = 92.169 secs, round = 92.17

10. 92.17
=======================================================================
How many unique passwords were attempted in the brute force attempt?

recreate the password table
	index=botsv1 sourcetype=stream:http dest="192.168.250.70" src="23.22.63.114" http_method=POST 
| rex field=form_data "passwd=(?<userpassword>\w+)" | table userpassword

click on events and go to userpasswords field, no top values over 1, total events were 412

11. 412
=======================================================================
What is the name of the executable uploaded by P01s0n1vy?

we know the 2 IPs that logged in and the server IP 
so we look that up and search for executables

	index=botsv1 sourcetype=stream:http src="40.80.148.42" OR "23.22.63.114" dest="192.168.250.70" *.exe

we find a php file and and exe file in the part_filename{} field

12. 3791.exe
=======================================================================
What is the MD5 hash of the executable uploaded?

look up the execubale and see what sourceypes it shows up in
	index=botsv1 3791.exe
from here we see a syslog files, they would have the hash info... click it

this exe was most likely run, so in click on process created.
I find 3791.exe in the joomla directory under the app field.
I click that and there is 1 event with a MD5. 


13. AAE3F5A29935E6ABCC2C2754D12A9AF0
=======================================================================
What is the name of the file that defaced the imreallynotbatman.com website?

Time to use suricata to see if it anything going to server.
	index=botsv1 sourcetype=suricata dest="192.168.250.70"

Just internal sources,
we verified there was an attack on this server though, so lets see if it was from the inside
	index=botsv1 sourcetype=suricata src="192.168.250.70"


3 external IP dest (2 of which are the ones we identified),
make the investigate a bit more narrow
	index=botsv1 sourcetype=suricata src="192.168.250.70" dest_ip ="40.80.148.42" OR "23.22.63.114"

Created a tabel to show me the URL and hostname
	index=botsv1 sourcetype=suricata src="192.168.250.70" dest_ip ="40.80.148.42" OR "23.22.63.114" 
| table http.hostname, http.url 

alot of normal files come up from 71.39.18.126 and imreallynotbatman.com,
Since this seems like it is an external attack I re-ran that table exluding those 2 hostnames

	index=botsv1 sourcetype=suricata src="192.168.250.70" dest_ip ="40.80.148.42" OR "23.22.63.114" 
| table http.hostname, http.url 
| search http.hostname!=  71.39.18.126 
| search http.hostname!= "imreallynotbatman.com"

questionable JPEG from prankglassinebracket.jumpingcrab.com
 
This is verified as a malicous website with the firewall
	index=botsv1 sourcetype=fgt_utm src="192.168.250.70" category="Malicious Websites"

14. poisonivy-is-coming-for-you-batman.jpeg
=======================================================================
This attack used dynamic DNS to resolve to the malicious IP. What fully qualified domain name (FQDN) is associated with this attack?

I came accross this answer in question 14

15. prankglassinebracket.jumpingcrab.com
=======================================================================
What IP address has P01s0n1vy tied to domains that are pre-staged to attack Wayne Enterprises?

Time for some OSINT with threatcrowd.org
I entered  prankglassinebracket.jumpingcrab.com into threatcrowd and many domains similar to 

16. 23.22.63.114
=======================================================================
Based on the data gathered from this attack and common open source intelligence sources for domain names, what is the email address that is most likely associated with 
P01s0n1vy APT group?

This one I had to lookup a walktrhough of i since the OSINT tool that I used shows it is register to Domains By Proxy, LLC
and the email on that registration  did not match with the correct answer. 

17.lillian.po1son1vy.com
=======================================================================
GCPD reported that common TTPs (Tactics, Techniques, Procedures) for the P01s0n1vy APT group if initial compromise fails is to send a spear phishing email with custom malware 
attached to their intended target. This malware is usually connected to P01s0n1vyâ€™s initial attack infrastructure. Using research techniques, provide the SHA256 hash of this 
malware.

I have no email logs to look for spear phishing attacks so I will look up the IP in 
threatminer.org

I am shows 3 MD5's with 1 being detected as malware

18. 9709473ab351387aab9e816eff3910b9f28a7a70202e250ed46dba8f820f34a8
=======================================================================
What special hex code is associated with the customized malware discussed in the previous question?

someone in the community section posted the hex associated with it

19. 53 74 65 76 65 20 42 72 61 6e 74 27 73 20 42 65 61 72 64 20 69 73 20 61 20 70 6f 77 65 72 66 75 6c 20 74 68 69 6e 67 2e 20 46 69 6e 64 20 74 68 69 73 20 6d 65 73 73 
61 67 65 20 61 6e 64 20 61 73 6b 20 68 69 6d 20 74 6f 20 62 75 79 20 79 6f 75 20 61 20 62 65 65 72 21 21 21
=======================================================================
What does this hex code decode to?

used cryptii.com/pipes/hex-decoder to decode the hex

20. Steve Brant's Beard is a powerful thing. Find this message and ask him to buy you a beer!!!
